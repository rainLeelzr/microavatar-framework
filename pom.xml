<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
    </parent>

    <groupId>microavatar.framework</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0</version>
    <name>parent</name>
    <packaging>pom</packaging>

    <modules>
        <!-- 应用服务，供外部调用（需要经过网关调用） -->
        <!-- 8001 -->
        <module>eureka</module>
        <!-- 8131 8132 -->
        <module>tcp-gateway</module>
        <module>tcp-test</module>
        <!-- 8101 8102-->
        <module>im</module>
        <!-- 8111-->
        <module>order</module>
        <!-- 8121-->
        <module>goods</module>

        <!-- 基础服务，供上层服务调用 -->
        <!-- 8011 8012-->
        <module>perm</module>


        <!-- 基础组件，供上层服务依赖 -->
        <module>common-protobuf</module>

        <!-- 核心组件，供上层服务依赖 -->
        <module>core</module>
        <module>core-net-tcp</module>
        <module>core-cache</module>
        <module>core-mvc</module>
        <module>core-database</module>
        <module>core-database-listener</module>
        <module>core-mq</module>

        <module>perm-api</module>

    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <rocketmq.version>4.1.0-incubating</rocketmq.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- microavatar.framework 系列 -->
            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>common-protobuf</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>core</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>core-net-tcp</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>core-database</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>core-mvc</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>core-database-listener</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>core-mq</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>microavatar.framework</groupId>
                <artifactId>perm-api</artifactId>
                <version>1.0.0</version>
            </dependency>

            <!-- spring cloud 指定spring cloud 的版本，让子项目引用 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- rocketmq -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <version>${rocketmq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-common</artifactId>
                <version>${rocketmq.version}</version>
            </dependency>

            <!-- 数据库 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.0</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.31</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>5.1.2</version>
            </dependency>

            <!-- json -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.36</version>
            </dependency>

            <!-- protobuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>2.6.1</version>
                <!--<version>2.4.1</version>-->
            </dependency>

            <!-- protobuf与json转换-->
            <dependency>
                <groupId>com.googlecode.protobuf-java-format</groupId>
                <artifactId>protobuf-java-format</artifactId>
                <version>1.2</version>
            </dependency>

            <!-- netty -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>4.1.15.Final</version>
            </dependency>

            <!-- 工具类 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.5</version>
            </dependency>

            <!-- alibaba canal-->
            <dependency>
                <groupId>com.alibaba.otter</groupId>
                <artifactId>canal.client</artifactId>
                <version>1.0.25</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--
            绝大部分的服务都需要依赖的jar包，可以配置这里，达到全局通用的效果
            工具类、数据库连接等jar，不应该放到这里，因为有些服务不需要，例如服务注册与发现中心。
            如果把这些不需要的jar也放到这里，则在服务打包时，会把这些不需要的jar也打包了，造成服务的jar包臃肿。
         -->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-devtools</artifactId>-->
        <!--<optional>true</optional>-->
        <!--</dependency>-->


        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-dependencies</artifactId>-->
        <!--<version>1.5.6.RELEASE</version>-->
        <!--<type>pom</type>-->
        <!--<scope>import</scope>-->
        <!--</dependency>-->


        <!-- 日志 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.3.6</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <proc>none</proc>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>